# Generated by Django 5.2.6 on 2025-09-07 04:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='전략 이름', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='전략 설명')),
                ('parameters', models.JSONField(default=dict, help_text="전략 실행에 필요한 파라미터 (e.g., {'short_ma': 5, 'long_ma': 20})")),
                ('is_active', models.BooleanField(default=True, help_text='활성화 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TradingAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_name', models.CharField(help_text='계좌 별칭', max_length=100)),
                ('account_number', models.CharField(help_text='계좌번호', max_length=20, unique=True)),
                ('account_type', models.CharField(choices=[('SIM', '모의투자'), ('REAL', '실전투자')], default='SIM', help_text='계좌 종류 (모의/실전)', max_length=4)),
                ('brokerage', models.CharField(default='한국투자증권', help_text='증권사', max_length=50)),
                ('app_key', models.CharField(help_text='API Key', max_length=255)),
                ('app_secret', models.CharField(help_text='API Secret', max_length=255)),
                ('is_active', models.BooleanField(default=True, help_text='활성화 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='사용자', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TradeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(help_text='종목코드', max_length=20)),
                ('order_id', models.CharField(help_text='주문 ID', max_length=100, unique=True)),
                ('trade_type', models.CharField(choices=[('BUY', '매수'), ('SELL', '매도')], max_length=4)),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('PENDING', '대기'), ('EXECUTED', '체결'), ('FAILED', '실패'), ('CANCELED', '취소')], default='PENDING', max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('log_message', models.TextField(blank=True, help_text='거래 관련 상세 메시지 또는 에러 로그')),
                ('strategy', models.ForeignKey(blank=True, help_text='거래에 사용된 전략', null=True, on_delete=django.db.models.deletion.SET_NULL, to='trading.strategy')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_logs', to='trading.tradingaccount')),
            ],
        ),
        migrations.CreateModel(
            name='AccountStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='해당 계좌에서 이 전략의 활성화 여부')),
                ('trading_capital', models.DecimalField(decimal_places=2, help_text='이 전략에 할당된 자본금', max_digits=15)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='trading.strategy')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strategies', to='trading.tradingaccount')),
            ],
            options={
                'unique_together': {('account', 'strategy')},
            },
        ),
    ]
