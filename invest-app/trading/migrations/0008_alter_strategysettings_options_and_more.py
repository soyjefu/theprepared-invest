# Generated by Django 5.2.6 on 2025-09-25 02:46

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("trading", "0007_strategysettings"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="strategysettings",
            options={
                "verbose_name": "AI Strategy Settings",
                "verbose_name_plural": "AI Strategy Settings",
            },
        ),
        migrations.AlterField(
            model_name="analyzedstock",
            name="analysis_date",
            field=models.DateField(
                auto_now=True, help_text="The date the analysis was performed."
            ),
        ),
        migrations.AlterField(
            model_name="analyzedstock",
            name="investment_horizon",
            field=models.CharField(
                choices=[
                    ("SHORT", "Short-term"),
                    ("MID", "Mid-term"),
                    ("LONG", "Long-term"),
                    ("NONE", "Unclassified"),
                ],
                default="NONE",
                help_text="The recommended investment horizon from the AI analysis.",
                max_length=5,
            ),
        ),
        migrations.AlterField(
            model_name="analyzedstock",
            name="is_investable",
            field=models.BooleanField(
                default=False,
                help_text="Whether the stock passed the initial screening.",
            ),
        ),
        migrations.AlterField(
            model_name="analyzedstock",
            name="last_price",
            field=models.DecimalField(
                decimal_places=2,
                default=0,
                help_text="The stock price at the time of analysis.",
                max_digits=15,
            ),
        ),
        migrations.AlterField(
            model_name="analyzedstock",
            name="raw_analysis_data",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Raw data used in the analysis (e.g., financial ratios).",
            ),
        ),
        migrations.AlterField(
            model_name="analyzedstock",
            name="stock_name",
            field=models.CharField(help_text="The name of the stock.", max_length=100),
        ),
        migrations.AlterField(
            model_name="analyzedstock",
            name="symbol",
            field=models.CharField(
                help_text="The stock symbol (ticker).", max_length=20, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="portfolio",
            name="average_buy_price",
            field=models.DecimalField(
                decimal_places=2,
                help_text="The average price at which the shares were bought.",
                max_digits=15,
            ),
        ),
        migrations.AlterField(
            model_name="portfolio",
            name="entry_log",
            field=models.ForeignKey(
                help_text="The trade log entry for the purchase of this position.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="portfolio_entry",
                to="trading.tradelog",
            ),
        ),
        migrations.AlterField(
            model_name="portfolio",
            name="is_open",
            field=models.BooleanField(
                default=True, help_text="Whether this is an open position."
            ),
        ),
        migrations.AlterField(
            model_name="portfolio",
            name="quantity",
            field=models.PositiveIntegerField(help_text="The number of shares held."),
        ),
        migrations.AlterField(
            model_name="portfolio",
            name="stock_name",
            field=models.CharField(help_text="The name of the stock.", max_length=100),
        ),
        migrations.AlterField(
            model_name="portfolio",
            name="stop_loss_price",
            field=models.DecimalField(
                decimal_places=2,
                help_text="The price at which to trigger a stop-loss sale.",
                max_digits=15,
            ),
        ),
        migrations.AlterField(
            model_name="portfolio",
            name="symbol",
            field=models.CharField(
                help_text="The stock symbol (ticker).", max_length=20
            ),
        ),
        migrations.AlterField(
            model_name="portfolio",
            name="target_price",
            field=models.DecimalField(
                decimal_places=2,
                help_text="The price at which to trigger a take-profit sale.",
                max_digits=15,
            ),
        ),
        migrations.AlterField(
            model_name="strategysettings",
            name="long_term_allocation",
            field=models.DecimalField(
                decimal_places=2,
                default=30.0,
                help_text="Percentage of capital to allocate to the long-term strategy.",
                max_digits=5,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="strategysettings",
            name="mid_term_allocation",
            field=models.DecimalField(
                decimal_places=2,
                default=40.0,
                help_text="Percentage of capital to allocate to the mid-term strategy.",
                max_digits=5,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="strategysettings",
            name="short_term_allocation",
            field=models.DecimalField(
                decimal_places=2,
                default=30.0,
                help_text="Percentage of capital to allocate to the short-term strategy.",
                max_digits=5,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="tradelog",
            name="log_message",
            field=models.TextField(
                blank=True, help_text="Detailed message or error log for the trade."
            ),
        ),
        migrations.AlterField(
            model_name="tradelog",
            name="order_id",
            field=models.CharField(
                help_text="The order ID from the brokerage.", max_length=100
            ),
        ),
        migrations.AlterField(
            model_name="tradelog",
            name="price",
            field=models.DecimalField(
                decimal_places=2, help_text="The price per share.", max_digits=15
            ),
        ),
        migrations.AlterField(
            model_name="tradelog",
            name="quantity",
            field=models.PositiveIntegerField(help_text="The number of shares."),
        ),
        migrations.AlterField(
            model_name="tradelog",
            name="status",
            field=models.CharField(
                choices=[
                    ("PENDING", "Pending"),
                    ("EXECUTED", "Executed"),
                    ("FAILED", "Failed"),
                    ("CANCELED", "Canceled"),
                ],
                default="PENDING",
                help_text="The current status of the trade.",
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="tradelog",
            name="symbol",
            field=models.CharField(
                help_text="The stock symbol (ticker).", max_length=20
            ),
        ),
        migrations.AlterField(
            model_name="tradelog",
            name="trade_type",
            field=models.CharField(
                choices=[("BUY", "Buy"), ("SELL", "Sell")],
                help_text="The type of trade (Buy/Sell).",
                max_length=4,
            ),
        ),
        migrations.AlterField(
            model_name="tradingaccount",
            name="account_name",
            field=models.CharField(
                help_text="A nickname for the account.", max_length=100
            ),
        ),
        migrations.AlterField(
            model_name="tradingaccount",
            name="account_number",
            field=models.CharField(
                help_text="The brokerage account number.", max_length=20, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="tradingaccount",
            name="account_type",
            field=models.CharField(
                choices=[("SIM", "Simulated"), ("REAL", "Real")],
                default="SIM",
                help_text="The type of account (Simulated/Real).",
                max_length=4,
            ),
        ),
        migrations.AlterField(
            model_name="tradingaccount",
            name="app_key",
            field=models.CharField(
                help_text="API Key for the brokerage.", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="tradingaccount",
            name="app_secret",
            field=models.CharField(
                help_text="API Secret for the brokerage.", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="tradingaccount",
            name="brokerage",
            field=models.CharField(
                default="Korea Investment & Securities",
                help_text="The name of the brokerage.",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="tradingaccount",
            name="is_active",
            field=models.BooleanField(
                default=True,
                help_text="Whether the account is currently active for trading.",
            ),
        ),
        migrations.AlterField(
            model_name="tradingaccount",
            name="user",
            field=models.ForeignKey(
                help_text="The user associated with this account.",
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="HistoricalPriceData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "symbol",
                    models.CharField(
                        db_index=True,
                        help_text="The stock symbol (ticker).",
                        max_length=20,
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        db_index=True, help_text="The date of the price data."
                    ),
                ),
                (
                    "open_price",
                    models.DecimalField(
                        decimal_places=2, help_text="Opening price.", max_digits=15
                    ),
                ),
                (
                    "high_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Highest price of the day.",
                        max_digits=15,
                    ),
                ),
                (
                    "low_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Lowest price of the day.",
                        max_digits=15,
                    ),
                ),
                (
                    "close_price",
                    models.DecimalField(
                        decimal_places=2, help_text="Closing price.", max_digits=15
                    ),
                ),
                (
                    "volume",
                    models.BigIntegerField(help_text="Trading volume for the day."),
                ),
            ],
            options={
                "verbose_name": "Historical Price Data",
                "verbose_name_plural": "Historical Price Data",
                "ordering": ["-date"],
                "unique_together": {("symbol", "date")},
            },
        ),
    ]
